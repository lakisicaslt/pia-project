"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const vlasnik_controller_1 = require("../controllers/vlasnik.controller");
const vlasnikRouter = express_1.default.Router();
vlasnikRouter.route('/dohvatiVlasnika').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiVlasnika(req, res));
vlasnikRouter.route('/pretraziFirme').post((req, res) => new vlasnik_controller_1.VlasnikController().pretraziFirme(req, res));
vlasnikRouter.route('/dohvatiFirmu').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiFirmu(req, res));
vlasnikRouter.route('/validacijaZakazivanja').post((req, res) => new vlasnik_controller_1.VlasnikController().validacijaZakazivanja(req, res));
vlasnikRouter.route('/dodajRestoranskuBastu').post((req, res) => new vlasnik_controller_1.VlasnikController().dodajRestoranskuBastu(req, res));
vlasnikRouter.route('/dodajPrivatnuBastu').post((req, res) => new vlasnik_controller_1.VlasnikController().dodajPrivatnuBastu(req, res));
vlasnikRouter.route('/dohvatiZavrsenePoslovePrivatne').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiZavrsenePoslovePrivatne(req, res));
vlasnikRouter.route('/dohvatiZavrsenePosloveRestoranske').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiZavrsenePosloveRestoranske(req, res));
vlasnikRouter.route('/renovirajPrivatnu').post((req, res) => new vlasnik_controller_1.VlasnikController().renovirajPrivatnu(req, res));
vlasnikRouter.route('/renovirajRestoransku').post((req, res) => new vlasnik_controller_1.VlasnikController().renovirajRestoransku(req, res));
vlasnikRouter.route('/dohvatiPrivatneRenovirane').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiPrivatneRenovirane(req, res));
vlasnikRouter.route('/dohvatiRestoranskeRenovirane').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiRestoranskeRenovirane(req, res));
vlasnikRouter.route('/dohvatiPrivatneNeobradjene').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiPrivatneNeobradjene(req, res));
vlasnikRouter.route('/dohvatiRestoranskeNeobradjene').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiRestoranskeNeobradjene(req, res));
vlasnikRouter.route('/prihvatiPrivatne').post((req, res) => new vlasnik_controller_1.VlasnikController().prihvatiPrivatne(req, res));
vlasnikRouter.route('/prihvatiRestoranske').post((req, res) => new vlasnik_controller_1.VlasnikController().prihvatiRestoranske(req, res));
vlasnikRouter.route('/odbijPrivatne').post((req, res) => new vlasnik_controller_1.VlasnikController().odbijPrivatne(req, res));
vlasnikRouter.route('/odbijRestoranske').post((req, res) => new vlasnik_controller_1.VlasnikController().odbijRestoranske(req, res));
vlasnikRouter.route('/dohvatiPrivatnaOdrzavanja').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiPrivatnaOdrzavanja(req, res));
vlasnikRouter.route('/dohvatiRestoranskaOdrzavanja').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiRestoranskaOdrzavanja(req, res));
vlasnikRouter.route('/prihvatiPrivatnaOdrzavanja').post((req, res) => new vlasnik_controller_1.VlasnikController().prihvatiPrivatnaOdrzavanja(req, res));
vlasnikRouter.route('/prihvatiRestoranskaOdrzavanja').post((req, res) => new vlasnik_controller_1.VlasnikController().prihvatiRestoranskaOdrzavanja(req, res));
vlasnikRouter.route('/odbijPrivatnaOdrzavanja').post((req, res) => new vlasnik_controller_1.VlasnikController().odbijPrivatnaOdrzavanja(req, res));
vlasnikRouter.route('/odbijRestoranskaOdrzavanja').post((req, res) => new vlasnik_controller_1.VlasnikController().odbijRestoranskaOdrzavanja(req, res));
vlasnikRouter.route('/dohvatiPosaoPoMesecima').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiPosaoPoMesecima(req, res));
vlasnikRouter.route('/dohvatiRaspodeluPoslova').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiRaspodeluPoslova(req, res));
vlasnikRouter.route('/dohvatiDane').post((req, res) => new vlasnik_controller_1.VlasnikController().dohvatiDane(req, res));
exports.default = vlasnikRouter;
